@startuml CommentRecipe
actor User
boundary MobileUI
participant ApiGateway
participant RecipeService
participant UserService
participant Rabbitmq
participant RecipeWorker
participant GerminiAPI
database MongoDB
database Postgresql

User -> MobileUI: 1. Enter comment in recipe detail screen
activate MobileUI

MobileUI -> ApiGateway: 2. Comment recipe
activate ApiGateway

ApiGateway -> RecipeService: 3. Forward request
activate RecipeService

database MongoDB
RecipeService -> MongoDB: 4. Insert data
activate MongoDB
RecipeService <-- MongoDB: 5. return response
deactivate MongoDB

RecipeService -> UserService: 6. gRPC call to get user's \n information <<gRPC>>
activate UserService
UserService -> Postgresql: 7. Query data
activate Postgresql
UserService <-- Postgresql: 8. return response
deactivate Postgresql
RecipeService <-- UserService: 9. return user's information <<gRPC>>
deactivate UserService

RecipeService -> Rabbitmq: 4. Publish "UserCommentRecipeEvent" \n message <<Async>>
activate Rabbitmq
Rabbitmq --> RecipeWorker: 5. Deliver "UserCommentRecipeEvent"\n message
deactivate Rabbitmq
activate RecipeWorker
RecipeWorker --> GerminiAPI: 6. Consume event and \n call api to check abuse
activate GerminiAPI
GerminiAPI --> RecipeWorker: 7. Return response
deactivate GerminiAPI
deactivate RecipeWorker


ApiGateway <-- RecipeService: 10. return recipe comment
deactivate RecipeService
MobileUI <-- ApiGateway: 11. Forward response
deactivate ApiGateway
User <-- MobileUI: 12. Display recipe comment
deactivate MobileUI

@enduml
