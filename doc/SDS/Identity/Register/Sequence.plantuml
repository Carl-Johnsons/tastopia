@startuml Sequence
actor User
boundary MobileUI
participant "<<coordinator>>\nApiGateWay" as ApiGateway
participant "<<service>>\nIdentityService" as IdentityService
participant "<<service>>\nUserService"  as UserService
participant "<<coordinator>>\nRabbitmq"  as Rabbitmq
participant "<<service>>\nNotificationService" as NotificationService
participant "<<service>>\nEmailWorker" as EmailWorker
participant "<<service>>\nSMSWorker" as SMSWorker
participant "<<service>>\nGmail" as Gmail
participant "<<service>>\nSpeedSMS" as SpeedSMS
database Postgresql

User -> MobileUI++: 1. Fill the register form and \n touch register button
MobileUI -> ApiGateway++: 2. Register with email
ApiGateway -> IdentityService++: 3. Forward request
IdentityService -> Postgresql++: 4. Get users data
IdentityService <-- Postgresql--: 5. return response

alt if user's email is already exist
    ApiGateway <-- IdentityService: 6A.1. return error status code
    MobileUI <-- ApiGateway: 6A.2. Forward response
    User <-- MobileUI: 6A.3. Display error
else
    IdentityService -> UserService++: 7. gRPC call to create user <<gRPC>>
    UserService -> Postgresql++: 8. Query and insert data
    UserService <-- Postgresql--: 9. return response
    IdentityService <-- UserService--: 10. return success <<gRPC>>

    IdentityService -> Rabbitmq++: 11. Publish "UserRegisterEvent" message <<Async>>
    Rabbitmq --> NotificationService: 12. Deliver "UserRegisterEvent"\n message
    activate NotificationService
    deactivate Rabbitmq

    alt if user identifier is email
      NotificationService -> Rabbitmq: 13A.1. Consume event and publish \n "SendEmailEvent" message <<Async>>
      deactivate NotificationService
      activate Rabbitmq
      Rabbitmq --> EmailWorker: 13A.2. Deliver "SendEmailEvent"\n message
      deactivate Rabbitmq
      activate EmailWorker
      EmailWorker -> Gmail: 13A.3. Send OTP email\n to specified email
      deactivate EmailWorker
      activate Gmail
    
      ApiGateway <-- IdentityService: 13A.4. return success status code
      deactivate Gmail
      destroy Gmail
    else 
      NotificationService -> Rabbitmq: 14. Consume event and publish \n "SendSMSEvent" message <<Async>>
      deactivate NotificationService
      activate Rabbitmq
      Rabbitmq --> SMSWorker: 15. Deliver "SendSMSEvent"\n message
      deactivate Rabbitmq
      activate SMSWorker
      SMSWorker -> SpeedSMS: 16. Send OTP \n to specified phone number
      deactivate SMSWorker
      activate SpeedSMS
    
      ApiGateway <-- IdentityService--: 17. return success status code
      deactivate SpeedSMS
      destroy SpeedSMS
    end


    MobileUI <-- ApiGateway--: 18. Forward response
    User <-- MobileUI--: 19. Display alert create account\n successfully and redirect user to\n community screen
end

@enduml
