@startuml Sequence
title "Request change password diagram"

<style>
  sequenceDiagram {
    reference {
      BackGroundColor white
    }
}
</style>

actor User
boundary MobileUI
participant "<<coordinator>>\nApiGateWay" as ApiGateway
participant "<<service>>\nIdentityService" as IdentityService
participant "<<coordinator>>\nRabbitmq" as Rabbitmq
participant "<<service>>\nNotificationService" as NotificationService
participant "<<service>>\nEmailWorker" as EmailWorker
participant "<<service>>\nSMSWorker" as SMSWorker
participant "<<service>>\nGmail" as Gmail
participant "<<service>>\nSpeedSMS" as SpeedSMS
database Postgresql

User -> MobileUI ++: 1. After user click verify button\n in forgot password screen
MobileUI -> ApiGateway ++: 2. Request change password

activate IdentityService
ref over ApiGateway, IdentityService: 3. Verify Access Token
ApiGateway -[hidden]-> IdentityService
deactivate IdentityService

ApiGateway -> IdentityService ++: 4. Forward request
IdentityService -> Postgresql ++: 5. Get account data
IdentityService <-- Postgresql --: 6. Return response

alt if account is null
  ApiGateway <-- IdentityService: 7A.1. Return not found error
  MobileUI <-- ApiGateway: 7A.2. Forward response
  User <-- MobileUI: 7A.3. Display error
else
  IdentityService -> Postgresql ++: 8. Update Account
  IdentityService <-- Postgresql --: 9. Return response
  IdentityService --> Rabbitmq ++: 10. Publish "UserSendOTPEvent" event <<Async>>
  Rabbitmq --> NotificationService: 11. Deliver "UserSendOTPEvent"\n message
  activate NotificationService
  deactivate Rabbitmq

  alt if user identifier is email
    NotificationService -> Rabbitmq: 12A.1. Consume event and publish \n "SendEmailEvent" message <<Async>>
    deactivate NotificationService
    activate Rabbitmq
    Rabbitmq --> EmailWorker: 12A.2. Deliver "SendEmailEvent"\n message
    deactivate Rabbitmq
    activate EmailWorker
    EmailWorker -> Gmail: 12A.3. Send OTP email\n to specified email
    deactivate EmailWorker
    activate Gmail
  
    ApiGateway <-- IdentityService: 12A.4. return success status code
    deactivate Gmail
    destroy Gmail
  else 
    NotificationService -> Rabbitmq: 13. Consume event and publish \n "SendSMSEvent" message <<Async>>
    deactivate NotificationService
    activate Rabbitmq
    Rabbitmq --> SMSWorker: 14. Deliver "SendSMSEvent"\n message
    deactivate Rabbitmq
    activate SMSWorker
    SMSWorker -> SpeedSMS: 15. Send OTP \n to specified phone number
    deactivate SMSWorker
    activate SpeedSMS
  
    ApiGateway <-- IdentityService--: 16. return success status code
    deactivate SpeedSMS
    destroy SpeedSMS
  end

  MobileUI <-- ApiGateway --: 17. Forward response
  User <-- MobileUI --: 18. Redirect user to verify OTP screen
end

@enduml
