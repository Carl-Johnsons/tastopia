@startuml GrpcRecipeSerciveClassDiagram
!include doc/SDS/CommonClassDiagram/ResultAndError.plantuml
skinparam classAttributeIconSize 0
skinparam linetype polyline
skinparam nodesep 50
skinparam ranksep 50
skinparam classAttributeIconSize 0

hide circle

class UploadFileServiceConsumer #LightSalmon;line:white;text:white{
    #_sender: ISender
    #_logger: ILogger
    +DeleteMultipleFileConsumer(context: ConsumeContext<DeleteMultipleFileEvent>): async Task
}


class Cloudinary #Black;line:white;text:white{
}

class DeletionResult #Black;line:white;text:white {
}

class DeletionParams #Black;line:white;text:white{
}

interface IFileUtility {
    #GetFileType(string fileName): enum
    #GetPublicIdByUrl(string url): string?
    #ConvertGrpcFileStreamToIFormFileAsync(List<GrpcFileStreamDTO> streams): Task<List<IFormFile>>
    #ConvertFileStreamDTOToIFormFileAsync(List<FileStreamDTO> streams): Task<List<IFormFile>>
}

class FileUtility Implements IFileUtility {
    +GetFileType(string fileName): enum
    +GetPublicIdByUrl(string url): string?
    +ConvertGrpcFileStreamToIFormFileAsync(List<GrpcFileStreamDTO> streams): Task<List<IFormFile>>
    +ConvertFileStreamDTOToIFormFileAsync(List<FileStreamDTO> streams): Task<List<IFormFile>>
}

class DeleteMultipleImageFileCommand {
    +DeleteUrls: List<string>?
}

class DeleteMultipleImageFileCommandHandler{
    -_fileUtility: IFileUtility
    -_cloudinary: Cloudinary
    +Handle(DeleteMultipleImageFileCommand request, CancellationToken cancellationToken): async Task<Result>
}

' Event DTO
class DeleteMultipleFileEvent #LightSalmon;line:white;text:white{
    +DeleteUrls: List<string>
}

class CloudinaryFileError {
    {static} +NotFound: Error
    {static} +UploadToCloudFail: Error
    {static} +DeleteToCloudFail: Error
    {static} +FileListContainNull: Error
    {static} +FileListTooLarge(long MaxSize, long FileSize): Error
    {static} +InvalidFile(string Type, string ChosenFileType): Error
}
' =========== Library class ===========
interface "IRequest<TResponse>" #black;line:white;text:white
interface "IRequestHandler<TRequest, TResponse>" #black;line:white;text:white
' =========== Library class ===========

DeleteMultipleImageFileCommand ..|> "IRequest<TResponse>"
DeleteMultipleImageFileCommandHandler ..|> "IRequestHandler<TRequest, TResponse>"

UploadFileServiceConsumer "1"--"1" DeleteMultipleFileEvent
UploadFileServiceConsumer "1"--"1" DeleteMultipleImageFileCommand

DeleteMultipleImageFileCommandHandler "1"--"1" DeleteMultipleImageFileCommand
DeleteMultipleImageFileCommandHandler "1"----"1..*" Result
DeleteMultipleImageFileCommandHandler "1" o---- "1" IFileUtility
DeleteMultipleImageFileCommandHandler "1" o-- "1" Cloudinary
DeleteMultipleImageFileCommandHandler "1"--"1..*" CloudinaryFileError
DeleteMultipleImageFileCommandHandler "1"--"1..*" DeletionResult
DeleteMultipleImageFileCommandHandler "1"--"1..*" DeletionParams


' =================STYLE=================
UploadFileServiceConsumer -[hidden]down-|> DeleteMultipleImageFileCommand

DeleteMultipleImageFileCommand -[hidden]down-|> DeleteMultipleImageFileCommandHandler

Error "1..*" -- "1" CloudinaryFileError
@enduml