// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RecipeService.Infrastructure.Persistence;

#nullable disable

namespace RecipeService.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241225095958_AddNumberOfCommentRecipe")]
    partial class AddNumberOfCommentRecipe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeService.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.CommentVote", b =>
                {
                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsUpvote")
                        .HasColumnType("boolean");

                    b.HasKey("CommentId", "UserId");

                    b.ToTable("CommentVote");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("CookTime")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("NumberOfComment")
                        .HasColumnType("integer");

                    b.Property<int?>("Serves")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TotalView")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VoteDiff")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            AuthorId = new Guid("61c61ac7-291e-4075-9689-666ef05547ed"),
                            CookTime = "10m",
                            CreatedAt = new DateTime(2024, 7, 28, 22, 11, 18, 0, DateTimeKind.Utc),
                            Description = "A quick and easy recipe for creamy scrambled eggs, perfect for breakfast.",
                            ImageUrl = "https://i.imgur.com/rxAzMjR.jpg",
                            Ingredients = new List<string> { "2 Eggs", "2 tbsp Milk", "1 tbsp Butter", "Salt", "Pepper" },
                            IsActive = true,
                            NumberOfComment = 0,
                            Serves = 2,
                            Title = "Classic Scrambled Eggs",
                            TotalView = 0,
                            UpdatedAt = new DateTime(2024, 7, 28, 22, 11, 18, 0, DateTimeKind.Utc),
                            VoteDiff = 0
                        },
                        new
                        {
                            Id = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            AuthorId = new Guid("61c61ac7-291e-4075-9689-666ef05547ed"),
                            CookTime = "40m",
                            CreatedAt = new DateTime(2023, 12, 24, 19, 1, 34, 0, DateTimeKind.Utc),
                            Description = "A comforting tomato soup made from fresh tomatoes and spices.",
                            ImageUrl = "https://i.imgur.com/SzhMVWs.jpg",
                            Ingredients = new List<string> { "4 Ripe Tomatoes", "1 Onion", "2 Garlic Cloves", "2 cups Vegetable Stock", "Salt", "Pepper" },
                            IsActive = true,
                            NumberOfComment = 0,
                            Serves = 2,
                            Title = "Tomato Soup",
                            TotalView = 0,
                            UpdatedAt = new DateTime(2023, 12, 24, 19, 1, 34, 0, DateTimeKind.Utc),
                            VoteDiff = 0
                        },
                        new
                        {
                            Id = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            AuthorId = new Guid("61c61ac7-291e-4075-9689-666ef05547ed"),
                            CookTime = "30m",
                            CreatedAt = new DateTime(2023, 5, 31, 12, 6, 57, 0, DateTimeKind.Utc),
                            Description = "A creamy, cheesy pasta with bacon, eggs, and parmesan.",
                            ImageUrl = "https://i.imgur.com/le7gFC6.jpg",
                            Ingredients = new List<string> { "200g Spaghetti", "100g Bacon", "2 Eggs", "50g Parmesan Cheese", "Salt", "Pepper" },
                            IsActive = true,
                            NumberOfComment = 0,
                            Serves = 2,
                            Title = "Pasta Carbonara",
                            TotalView = 0,
                            UpdatedAt = new DateTime(2023, 5, 31, 12, 6, 57, 0, DateTimeKind.Utc),
                            VoteDiff = 0
                        },
                        new
                        {
                            Id = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            AuthorId = new Guid("61c61ac7-291e-4075-9689-666ef05547ed"),
                            CookTime = "20m",
                            CreatedAt = new DateTime(2023, 2, 18, 23, 28, 9, 0, DateTimeKind.Utc),
                            Description = "A healthy stir-fry with various vegetables and soy sauce.",
                            ImageUrl = "https://i.imgur.com/aXVMMXA.jpg",
                            Ingredients = new List<string> { "1 Bell Pepper", "1 Carrot", "1 Broccoli Head", "2 tbsp Soy Sauce", "1 tbsp Olive Oil", "1 Garlic Clove" },
                            IsActive = true,
                            NumberOfComment = 0,
                            Serves = 2,
                            Title = "Vegetable Stir-Fry",
                            TotalView = 0,
                            UpdatedAt = new DateTime(2023, 2, 18, 23, 28, 9, 0, DateTimeKind.Utc),
                            VoteDiff = 0
                        },
                        new
                        {
                            Id = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            AuthorId = new Guid("61c61ac7-291e-4075-9689-666ef05547ed"),
                            CookTime = "15m",
                            CreatedAt = new DateTime(2023, 9, 30, 18, 9, 19, 0, DateTimeKind.Utc),
                            Description = "A simple and delicious garlic bread recipe, perfect as a side dish.",
                            ImageUrl = "https://i.imgur.com/RpT3aRb.jpg",
                            Ingredients = new List<string> { "1 Baguette", "50g Butter", "2 Garlic Cloves", "1 tbsp Parsley", "Salt" },
                            IsActive = true,
                            NumberOfComment = 0,
                            Serves = 2,
                            Title = "Garlic Bread",
                            TotalView = 0,
                            UpdatedAt = new DateTime(2023, 9, 30, 18, 9, 19, 0, DateTimeKind.Utc),
                            VoteDiff = 0
                        });
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.RecipeTag", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("RecipeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTag");

                    b.HasData(
                        new
                        {
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            TagId = new Guid("2bf7f026-e745-4bd9-8701-a9519742d0f7")
                        },
                        new
                        {
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            TagId = new Guid("f92b7c2e-d2f0-4b7f-b5d5-9d3a41b718c3")
                        },
                        new
                        {
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            TagId = new Guid("6f229db7-e0d7-4fd8-83d6-4f8b9c3ef5c1")
                        },
                        new
                        {
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            TagId = new Guid("df3f6301-3cae-480a-87da-c7b8f6150292")
                        },
                        new
                        {
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            TagId = new Guid("8db97f13-4ff0-4a0e-9c5c-b2c1d4e1b78e")
                        },
                        new
                        {
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            TagId = new Guid("2bf7f026-e745-4bd9-8701-a9519742d0f7")
                        },
                        new
                        {
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            TagId = new Guid("9c5d4e5f-3c44-4bde-a5a6-7a1d3e1b67d6")
                        },
                        new
                        {
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            TagId = new Guid("3e084d1f-4dd1-42dc-9a15-9f8fbb4b8495")
                        },
                        new
                        {
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            TagId = new Guid("ad7dca4b-9ae8-44d3-b4c3-7d4c9e9b6f8e")
                        },
                        new
                        {
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            TagId = new Guid("63af97d6-9fc0-4c5b-b6b1-d5e5e8b8a0a6")
                        },
                        new
                        {
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            TagId = new Guid("4a6fc1f9-7f8d-49de-85b4-b6b9f8d1c4a8")
                        },
                        new
                        {
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            TagId = new Guid("8db97f13-4ff0-4a0e-9c5c-b2c1d4e1b78e")
                        },
                        new
                        {
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            TagId = new Guid("6f229db7-e0d7-4fd8-83d6-4f8b9c3ef5c1")
                        });
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.RecipeVote", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsUpvote")
                        .HasColumnType("boolean");

                    b.HasKey("RecipeId", "UserId");

                    b.ToTable("RecipeVote");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Step", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AttachedFiles")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OdinalNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Step");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4217e5dc-33eb-4050-9b74-70ae27973108"),
                            Content = "Crack the eggs into a bowl and whisk with milk, salt, and pepper.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 1,
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("ccdf43eb-1591-47c7-acca-a36cc5d66f01"),
                            Content = "Melt butter in a non-stick pan over medium heat.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 2,
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("faa8e3a7-1166-4e8b-a142-62b1f7f32cc9"),
                            Content = "Pour the egg mixture into the pan and gently stir until softly set.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 3,
                            RecipeId = new Guid("aa626791-ee53-4390-a5a5-94c5b8096f87"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("75db6aff-549d-48d2-a3dd-6c0e8929ef4b"),
                            Content = "Chop the tomatoes, onion, and garlic.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 1,
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c7b99ec3-347c-44cb-a6f4-546b3d2eee10"),
                            Content = "Sauté onion and garlic in olive oil until soft.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 2,
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("710ef3c7-2790-49ba-919c-e7cb1fd672a5"),
                            Content = "Add tomatoes and vegetable stock, then simmer for 30 minutes.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 3,
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("39eec6f7-1b77-4b17-a7a8-1a904988a6f6"),
                            Content = "Blend the soup until smooth and season with salt and pepper.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 4,
                            RecipeId = new Guid("c8362fc3-5cff-4171-a78d-40613c748596"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f71db38a-9789-46a4-8ab8-1492a9c75ea7"),
                            Content = "Cook spaghetti in salted boiling water until al dente.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 1,
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("51141a2a-a950-4e73-97f4-644358585a18"),
                            Content = "Fry bacon until crispy.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 2,
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("784e0b7f-2942-44a2-b398-97dbc2ec58bb"),
                            Content = "Mix eggs and grated parmesan in a bowl.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 3,
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("e76a3192-a5ee-4a40-9db2-f3d5b0e2bc6d"),
                            Content = "Toss cooked spaghetti with bacon and remove from heat.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 4,
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("e64bfce8-9614-45ef-a59a-20c0d94e2a87"),
                            Content = "Add the egg mixture and stir until creamy.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 5,
                            RecipeId = new Guid("068be5ad-dc4d-4a7b-bce7-24b4ed9fec57"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("e5671af0-3bfe-4482-b5f5-6bd27151a788"),
                            Content = "Chop all vegetables into bite-sized pieces.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 1,
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c9564cc0-aa88-4d42-b5fc-14ee383ae5cd"),
                            Content = "Heat olive oil in a wok or large pan.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 2,
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("076d5723-b072-401e-9d7a-93089786f429"),
                            Content = "Add vegetables and stir-fry for 5-7 minutes.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 3,
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("6cd9e21c-e91b-4f04-9a35-3513aaf5f97a"),
                            Content = "Add soy sauce and stir well.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 4,
                            RecipeId = new Guid("0a1ff224-99eb-442f-b043-0d00bf9fb1c2"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("04801fc7-23f2-42bd-9b50-7010762b3f96"),
                            Content = "Preheat the oven to 180°C (350°F).",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 1,
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("412dfd68-48a7-44dc-aa18-7ac8a0c1335a"),
                            Content = "Mix softened butter with minced garlic and parsley.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 2,
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("6b2d5af6-c354-4c55-85de-c73da4e38974"),
                            Content = "Spread the mixture onto sliced baguette.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 3,
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("ee858298-bc0a-4b9b-bfa4-7bb73125884d"),
                            Content = "Bake in the oven for 10-12 minutes until golden.",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OdinalNumber = 4,
                            RecipeId = new Guid("057aa844-742a-4952-8162-dbfbd7e493ac"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df3f6301-3cae-480a-87da-c7b8f6150292"),
                            Category = "INGREDIENT",
                            Code = "TOMATO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/3NovRt2.png",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Tomato"
                        },
                        new
                        {
                            Id = new Guid("2bf7f026-e745-4bd9-8701-a9519742d0f7"),
                            Category = "INGREDIENT",
                            Code = "EGG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/BAT5qyL.png",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Egg"
                        },
                        new
                        {
                            Id = new Guid("92316e11-fd87-4c0f-aac7-bde4f19c2b38"),
                            Category = "INGREDIENT",
                            Code = "RICE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/C4nNmU1.png",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Rice"
                        },
                        new
                        {
                            Id = new Guid("a7a1953d-027e-43b6-ad0d-d10312a3064d"),
                            Category = "INGREDIENT",
                            Code = "MUSKROOM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/m8wBuYO.png",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Mushroom"
                        },
                        new
                        {
                            Id = new Guid("f92b7c2e-d2f0-4b7f-b5d5-9d3a41b718c3"),
                            Category = "INGREDIENT",
                            Code = "MILK",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/Rk3MwdQ.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Milk"
                        },
                        new
                        {
                            Id = new Guid("6f229db7-e0d7-4fd8-83d6-4f8b9c3ef5c1"),
                            Category = "INGREDIENT",
                            Code = "BUTTER",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/Z8y4Hsr.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Butter"
                        },
                        new
                        {
                            Id = new Guid("3e084d1f-4dd1-42dc-9a15-9f8fbb4b8495"),
                            Category = "INGREDIENT",
                            Code = "CHEESE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/feglS7k.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Cheese"
                        },
                        new
                        {
                            Id = new Guid("9c5d4e5f-3c44-4bde-a5a6-7a1d3e1b67d6"),
                            Category = "INGREDIENT",
                            Code = "BACON",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/lyYgVRi.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Bacon"
                        },
                        new
                        {
                            Id = new Guid("8db97f13-4ff0-4a0e-9c5c-b2c1d4e1b78e"),
                            Category = "INGREDIENT",
                            Code = "GARLIC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/oLwdHvx.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Garlic"
                        },
                        new
                        {
                            Id = new Guid("ad7dca4b-9ae8-44d3-b4c3-7d4c9e9b6f8e"),
                            Category = "INGREDIENT",
                            Code = "CARROT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/DZEq7TK.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Carrot"
                        },
                        new
                        {
                            Id = new Guid("63af97d6-9fc0-4c5b-b6b1-d5e5e8b8a0a6"),
                            Category = "INGREDIENT",
                            Code = "BROCCOLI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/8nDcffy.png",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Broccoli"
                        },
                        new
                        {
                            Id = new Guid("4a6fc1f9-7f8d-49de-85b4-b6b9f8d1c4a8"),
                            Category = "INGREDIENT",
                            Code = "SOY_SAUCE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://i.imgur.com/2QiWJWH.jpg",
                            IsActive = true,
                            Status = "Pending",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Soy Sauce"
                        });
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserBookmarkRecipe", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UserBookmarkRecipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserReportComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.ToTable("UserReportComment");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserReportRecipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("UserReportRecipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Comment", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.CommentVote", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Comment", "Comment")
                        .WithMany("CommentVotes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.RecipeTag", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeService.Domain.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.RecipeVote", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany("RecipeVotes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Step", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserBookmarkRecipe", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserReportComment", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.UserReportRecipe", b =>
                {
                    b.HasOne("RecipeService.Domain.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Comment", b =>
                {
                    b.Navigation("CommentVotes");
                });

            modelBuilder.Entity("RecipeService.Domain.Entities.Recipe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("RecipeTags");

                    b.Navigation("RecipeVotes");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
