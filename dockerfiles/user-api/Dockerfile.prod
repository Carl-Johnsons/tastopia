#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
# Copy pre-build lib
COPY ["./data/nuget", "./nuget"]

COPY ["./app/server/UserService/src/UserService.API/UserService.API.csproj", "UserService.API/"]
COPY ["./app/server/UserService/src/UserService.Application/UserService.Application.csproj", "UserService.Application/"]
COPY ["./app/server/UserService/src/UserService.Infrastructure/UserService.Infrastructure.csproj", "UserService.Infrastructure/"]
COPY ["./app/server/UserService/src/UserService.Domain/UserService.Domain.csproj", "UserService.Domain/"]
COPY ["./app/server/Contract/Contract/Published", "Contract/"]

# Building the services
WORKDIR "/src/UserService.API"
RUN dotnet restore --packages "../nuget" --verbosity normal
COPY ["./app/server/UserService/src","/src"]
RUN dotnet build --packages "../nuget" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish --packages "../nuget" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "UserService.API.dll"]